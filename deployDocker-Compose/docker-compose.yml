version: '7'

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always

  portainer:
    image: portainer/portainer-ce:2.21.1
    container_name: portainer
    ports:
      - '8000:8000'
      - '9443:9443'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: always

  bck_redis:
    image: redis:latest
    container_name: redis
    ports:
      - '6379:6379'
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'
      - '9300:9300'
    deploy:
      resources:
        limits:
          memory: 1GB
    networks:
      - elastic
    restart: always

  kibana:
    image: docker.elastic.co/kibana/kibana:8.9.1
    container_name: kibana
    ports:
      - '5601:5601'
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    networks:
      - elastic

  bck_firebase:
    image: 73197546/firebase_op360_dev:1.0.1
    container_name: bck_firebase
    ports:
      - '8081:80'
    restart: always

  web_src_gos_front_end:
    image: 73197546/src_gos_front_end_op360_dev:1.0.1
    container_name: src_gos_front_end
    ports:
      - '8082:80'
    restart: always

  bck_src_gos:
    image: 73197546/src_gos_back_op360_dev:1.0.1
    container_name: bck_src_gos
    ports:
      - '8083:80'
    volumes:
      - /data/image01/op360files/filesOp360/op360files/scr/files:/app/scr/files
      - /data/image01/op360files/filesOp360/op360files/scr/images:/app/scr/images
      - /data/image01/op360files/filesOp360/op360files/gos/files:/app/gos/files
      - /data/image01/op360files/filesOp360/op360files/gos/images:/app/gos/images
    restart: always

  bck_int_scr:
    image: 73197546/int_scr_bck_op360_dev:1.0.1
    container_name: bck_int_scr
    ports:
      - '8084:80'
    restart: always

  bck_obras:
    image: syspotecing7/op360obrasbackdev:1.0.0
    container_name: bck_obras
    ports:
      - '8085:80'
    volumes:
      - /data/image01/op360files/obras/files:/app/obras/files
      - /data/image01/op360files/obras/images:/app/obras/images
    restart: always

  bck_cte:
    image: 73197546/cte_bck_op360_dev:1.0.1
    container_name: bck_cte
    ports:
      - '8086:80'
    volumes:
      - /data/image01/op360files/cte/files:/app/cte/files
      - /data/image01/op360files/cte/images:/app/cte/images
    restart: always

  bck_gd:
    image: syspotecdocker2021/backopoms_dev:1.0.1
    container_name: backopoms
    ports:
      - '8087:80'
    volumes:
      - /data/image01/op360files/gd/files:/app/gd/files
      - /data/image01/op360files/gd/images:/app/gd/images
    restart: always

  web_gd:
    image: syspotecdocker2021/web_oms_dev:1.0.3
    container_name: web_oms
    ports:
      - '8089:80'
    restart: always

  bck_sck_io:
    image: 73197546/socket_io_bck_op360_dev:1.0.1
    container_name: bck_socket_io
    ports:
      - '8090:80'
    restart: always

  web_obras:
    image: syspotecing7/op360obrasfrontdev:1.0.0
    container_name: web_obras
    ports:
      - '8091:80'
    restart: always

  web_gos:
    image: 73197546/webop360dev:1.0.1
    container_name: web_gos
    ports:
      - '8092:80'
    restart: always

  web_cte:
    image: 73197546/web_cte_op360_dev:1.0.1
    container_name: web_cte
    ports:
      - '8094:80'
    restart: always

  bck_int_cte:
    image: 73197546/int_cte_bck_op360_dev:1.0.1
    container_name: bck_int_cte
    ports:
      - '8095:80'
    restart: always
  
  movil_web_cte:
    image: 73197546/cte_movil_web_op360_dev:1.0.1
    container_name: movil_web_cte
    ports:
      - '8096:80'
    restart: always

networks:
  elastic:
    driver: bridge
  redis_net:
    driver: bridge

volumes:
  portainer_data:
    driver: local
  esdata:
    driver: local
